#!/usr/bin/env ruby
# frozen_string_literal: true

trap('SIGINT') { exit! }

source_path = File.dirname(__dir__)
$LOAD_PATH.unshift(source_path)

require 'faraday'
require 'json'

Dir.glob(File.join(source_path, 'gear', '**', '*.json')).sort.each do |path|
  next unless ((Time.now - File.mtime(path)) / 60 / 60 / 24).round > 1

  data = JSON.load(File.read(path))

  print "- #{data['name']}: "

  begin
    response = Faraday.get(data['url'])
    original_url = data['url']

    case response.status
    when 200
      puts 'All good.'
    when (301..308)
      data['url'] = response.headers['location']
      puts 'Updated (redirected).'
    when 404
      data['error'] = 'Dead link'
      puts 'Dead link!'
    else
      puts "Ignoring (#{response.status})"
    end
  rescue Faraday::ConnectionFailed,
         Faraday::TimeoutError,
         Faraday::SSLError,
         Zlib::DataError
    puts 'Connection failed - ignoring.'
  rescue URI::InvalidURIError
    data['error'] = 'Invalid URL'
    puts 'Invalid URL!'
  end

  if data['url'] != original_url.to_s || data['error']
    File.write(path, JSON.pretty_generate(data))
  end
end
